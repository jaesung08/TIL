# 7.31
## APS 기본 - 배열 array
### 알고리즘 // swea의 프로그래밍 intermediate 과 advanced의 내용( linked list 제외, 혼자 봐보도록)
* 문제해결을 위한 절차나 방법
* 컴퓨터에서 알고리즘을 표현하는 방법은 두가지
* 사진1

#### 알고리즘의 성능
* APS 과정의 목표 중 하나는 보다 좋은 알고리즘을 이해하고 활용하는 것.
* 좋은 알고리즘의 조건
    * 정확성 : 얼마나 정확하게 동작하는가 
    + 작업량 : 얼마나 적은 연산으로 원하는 결과를 얻어내는가
    * 메모리 사용량 : 얼마나 적은 메모리를 사용하는ㄱ
    + 단순성 : 얼마나 단순한가
    * 최적성  : 더 이상 개선할 여지없이 최적화 되있는가

* 주어진 문제를 해결하기 위해 여러개의 다양한 알고리즘이 가능하다.
+ 알고리즘의 작업량을 비교하여 결정
    * 알고리즘의 작업량은 시간복잡도로 표현
    + 실행되는 명령의 갯수를 계산하고 실제 걸리는 시간을 측정

#### 시간복잡도 ( 빅-오(O) 표기법)
* Big oh Nation
+ 시간복잡도 함수중에서 가장 큰 영향력을 주는 n에 대한 항만을 표시
* 계수(Coefficient)는 생략하여 표시
+ 사진2
* 요소 수가 증가함에 따라 각기 다른 시간복잡도의 알고리즘은 다음과 같은 연산수를 보인다
+ 사진3

## 배열
+ 일정한 자료형의 변수들을 하나의 이름으로 열거하여 사용하는 자료구조
* 6개의 변수를 사용해야 하는 경우, 이를 배열로 바꿔 사용하는 예시
+ 사진4

### 배열의 필요성
* 여러개의 변수가 필요할 때, 매번 다른 변수명을 사용하여 접근하는 것은 비효율적일 수 있다.
* 배열을 사용하면 하나의 선언으로 둘 이상의 변수를 선언할 수 있다
* 단순히 다수의 변수 선언 뿐 아니라, 다수의 변수로도 하기 힘든 작업도 배열을 활용해 쉽게할 수 있다.

### 1차원 배열 선언
* 별도의 선언 방법이 없으면 변수에 처음 값을 할당할 때 생성
+ 이름 : 프로그램에서 사용할 배열의 이름
    * Arr =list() // Arr=[] // Arr =[1,2,3] // Arr = [0] * 10
* 1차원 배열의 접근
    * Arr[0] = 10 // 배열 Arr의 0번 원소에 10을 저장하라
    * Arr[idx] = 20 // 배열 Arr의 idx번 원소에 20을 저장하라

#### 배열 활용 예제 : Gravity
* 상자들이 쌓여있는 방이 있을 때, 방이 오른쪽으로 90도 회전하여 상자들이 중력의 영향을 받아 낙하한다고 할 때,
* 낙차가 가장 큰 상자를 구하여 그 낙차를 리턴하는 프로그램을 작성하시오.
* 중력은 완료된 후 적용된다.
* 상자들은 모두 한쪽 벽면에 붙여진 상태로 쌓여 2차원의 형태를 이루며 벽에서 떨어져서 쌓인 상자는 없다.
* 방의 가로길이는 항상 100이며, 세로 길이도, 항상 100이다.
* 즉, 상자는 최소0, 최대 100 높이로 쌓을 수 있다.
* 사진5
```py
'''
9
7 4 2 0 0 6 0 7 0
'''

N = int(input())
arr = list(map(int, input().split()))

print(N)
print(arr)
```

#### 정렬
* 2개 이상의 자료를 특정 기준에 의해 작은값 부터 큰 값(오름차순 : ascending), 혹은 그 반대로 (내림차순: descending) 재배열 하는것
* 정렬의 방식
    * 버블 정렬
    * 카운팅 정렬
    * 선택 정렬
    * 퀵 정렬
    * 삽입 정렬
    * 병합 정렬

##### 버블 정렬
* 인접한 두 개의 원소를 비교하며 자리를 계속 교환하는 방식
* 정렬 과정
    * 첫 번째 원솝부터 인접한 원소끼리 계속 자리를 교환하면서 맨 마지막자리까지 이동한다.
    * 한단계가 끝나면 가장 큰 원소가 마지막 자리로 정렬된다.
    * 교환하며 자리를 이동하는 모습이 물 위에 올라오는 거품과 같다고 하여 버블 정렬이라 칭함

* 시간복잡도 => O(n^2)
```py
'''
1
5
1 4 7 8 0
'''
T =int(input())
for tc in (range(1, T+1)):
    N = int(input())
    arr = list(map(int, input().split()))
    
    for i in range(N-1, 0, -1):
        for j in range(i):
            if arr[j] > arr[j+1] :
                arr[j],arr[j+1] = arr[j+1], arr[j]
                
    print(f'#{tc}', *arr)  # *arr말고 for문으로도 할줄 알아야함 # 
#1 0 1 4 7 8
```

SWEA 1206번 문제 풀어보기?




















